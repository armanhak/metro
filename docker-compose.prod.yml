version: '3.8'

services:
  web:    
    build:
      context: ./metro_assist
    env_file:
      - ./env/.env.prod
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    expose:
      - 8000
    ports:
      - '8000:8000'
    depends_on:
      - db

  db:
    image: postgres:16.1
    env_file:
      - ./env/.env.prod      
    command: ["postgres", "-c", "max_connections=150"]
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: '3G'
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw,size=20G
    restart: always
    ports:
      - '6543:5432'

  # nginx:    
  #   build: ./nginx
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  #   volumes:
  #     - certbot_conf:/etc/letsencrypt # <--here
  #     - certbot_www:/var/www/certbot # <--here
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - web
      
  # certbot:
  #   image: certbot/certbot:v2.10.0
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - certbot_conf:/etc/letsencrypt # <--here
  #     - certbot_www:/var/www/certbot # <--here
  #   restart: always

volumes:
  postgres_data:
  # certbot_conf:
  # certbot_www:
